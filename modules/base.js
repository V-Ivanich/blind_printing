const baseStr = {
englKey: [
  "A switch statement first evaluates its expression.1",
  "It then looks for the first case clause whose expr2",
  "ession evaluates to the same value as the result o3",
  "f the input expression (using the strict compariso4",
  "n, ===) and transfers control to that clause, exec5",
  "uting the associated statements. (If multiple case6",
  "s match the provided value, the first case that ma7",
  "tches is selected, even if the cases are not equal8",
  "to each other.) If no matching case clause is foun9",
  "d, the program looks for the optional default clau0",
  "se, and if found, transfers control to that clause9",
  ", executing the associated statements. If no defau8",
  "lt clause is found, the program continues executio7",
  "n at the statement following the end of switch. By6",
  "Cconvention, the default clause is the last clause5",
  ", but it does not need to be so. The optional brea4",
  "k statement associated with each case label ensure3",
  "s that the program breaks out of switch once the m2",
  "atched statement is executed and continues executi1",
  "on at the statement following switch. If break iss=",
  "omitted, the program continues execution at the ne-",
  "xt statement in the switch statement. The break st4",
  "atement is not required if a return statement prec3",
  "edes it. Examples Using switch In the following ex2",
  "ample, if expr evaluates to Bananas, the program m1",
  "atches the value with case case 'Bananas' and exec=",
  "utes the associated statement. When break is encou+",
  "ntered, the program breaks out of switch and execu-",
  "tes the statement following switch. If break weres;",
  "omitted, the statement for the case 'Cherries' wou,",
  "JavaScript and Java are similar in some ways but f.",
  "undamentally different in some others. The JavaScr4",
  "ipt language resembles Java but does not have Java5",
  "'s static typing and strong type checking. JavaScr6",
  "ipt follows most Java expression syntax, naming co7",
  "nventions and basic control-flow constructs which!m",
  "was the reason why it was renamed from LiveScript>7",
  "to JavaScript. In contrast to Java's compile-time.0",
  "system of classes built by declarations, JavaScrip3",
  "t supports a runtime system based on a small numbe4",
  "r of data types representing numeric, Boolean, and.",
  "string values. JavaScript has a prototype-based of,",
  "bject model instead of the more common class-base,.",
  "d object model. The prototype-based model provide/,",
  "s dynamic inheritance; that is, what is inherited/;",
  "can vary for individual objects. JavaScript also so",
  "upports functions without any special declarative:.",
  "requirements. Functions can be properties of objec8",
  "ts, executing as loosely typed methods. JavaScript9",
  "is a very free-form language compared to Java. You-",
  "u do not have to declare all variables, classes,..!",
  "and methods. You do not have to be concerned with,5",
  "whether methods are public, private, or protected;.",
  "and you do not have to implement interfaces. Vari',",
  "ables, parameters, and function return types are?,{",
  "not explicitly typed. Object-oriented. write to..*}"
]
}
export const basEngl = baseStr.englKey;