const baseStr = {
englKey: [
  "A switch statement first evaluates its expression.",
  "It then looks for the first case clause whose expr",
  "ession evaluates to the same value as the result o",
  "f the input expression (using the strict compariso",
  "n, ===) and transfers control to that clause, exec",
  "uting the associated statements. (If multiple case",
  "s match the provided value, the first case that ma",
  "tches is selected, even if the cases are not equal",
  "to each other.) If no matching case clause is foun",
  "d, the program looks for the optional default clau",
  "se, and if found, transfers control to that clause",
  ", executing the associated statements. If no defau",
  "lt clause is found, the program continues executio",
  "n at the statement following the end of switch. By",
  "Cconvention, the default clause is the last clause",
  ", but it does not need to be so. The optional brea",
  "k statement associated with each case label ensure",
  "s that the program breaks out of switch once the m",
  "atched statement is executed and continues executi",
  "on at the statement following switch. If break iss",
  "omitted, the program continues execution at the ne",
  "xt statement in the switch statement. The break st",
  "atement is not required if a return statement prec",
  "edes it. Examples Using switch In the following ex",
  "ample, if expr evaluates to Bananas, the program m",
  "atches the value with case case 'Bananas' and exec",
  "utes the associated statement. When break is encou",
  "ntered, the program breaks out of switch and execu",
  "tes the statement following switch. If break weres",
  "omitted, the statement for the case 'Cherries' wou",
  "JavaScript and Java are similar in some ways but f",
  "undamentally different in some others. The JavaScr",
  "ipt language resembles Java but does not have Java",
  "'s static typing and strong type checking. JavaScr",
  "ipt follows most Java expression syntax, naming co",
  "nventions and basic control-flow constructs which!",
  "was the reason why it was renamed from LiveScript>",
  "to JavaScript. In contrast to Java's compile-time.",
  "system of classes built by declarations, JavaScrip",
  "t supports a runtime system based on a small numbe",
  "r of data types representing numeric, Boolean, and",
  "string values. JavaScript has a prototype-based of",
  "bject model instead of the more common class-base,",
  "d object model. The prototype-based model provide/",
  "s dynamic inheritance; that is, what is inherited/",
  "can vary for individual objects. JavaScript also s",
  "upports functions without any special declarative:",
  "requirements. Functions can be properties of objec",
  "ts, executing as loosely typed methods. JavaScript",
  "is a very free-form language compared to Java. You",
  "u do not have to declare all variables, classes,..",
  "and methods. You do not have to be concerned with,",
  "whether methods are public, private, or protected;",
  "and you do not have to implement interfaces. Vari'",
  "ables, parameters, and function return types are?,",
  "not explicitly typed. Object-oriented. write to..*"
]
}
export const basEngl = baseStr.englKey;